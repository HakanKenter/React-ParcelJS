{"id":"src/index.jsx","dependencies":[{"name":"/Volumes/TOSHIBA EXT HK/ParcelJS/package.json","includedInParent":true,"mtime":1642239642000},{"name":"react-dom","loc":{"line":1,"column":21},"parent":"/Volumes/TOSHIBA EXT HK/ParcelJS/src/index.jsx","resolved":"/Volumes/TOSHIBA EXT HK/ParcelJS/node_modules/react-dom/index.js"},{"name":"react","loc":{"line":2,"column":30},"parent":"/Volumes/TOSHIBA EXT HK/ParcelJS/src/index.jsx","resolved":"/Volumes/TOSHIBA EXT HK/ParcelJS/node_modules/react/index.js"},{"name":"./index.css","loc":{"line":3,"column":7},"parent":"/Volumes/TOSHIBA EXT HK/ParcelJS/src/index.jsx","resolved":"/Volumes/TOSHIBA EXT HK/ParcelJS/src/index.css"}],"generated":{"js":"\"use strict\";\n\nvar _reactDom = require(\"react-dom\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nrequire(\"./index.css\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// Je crée une fonction qui renvoi simplement\n// le state d'une constante et une fonction d'incrmentation\nfunction useIncrement(initial, step) {\n  var _useState = (0, _react.useState)(initial),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var increment = function increment() {\n    setCount(function (c) {\n      return c + step;\n    });\n  };\n\n  return [count, increment];\n}\n\nfunction Compteur() {\n  // Et ici je dis que count et increment\n  // sont de type useIncrement\n  // Comprendre cette maniere d'écrire le code \n  var _useIncrement = useIncrement(0, 2),\n      _useIncrement2 = _slicedToArray(_useIncrement, 2),\n      count = _useIncrement2[0],\n      increment = _useIncrement2[1];\n\n  return /*#__PURE__*/_react.default.createElement(\"button\", {\n    onClick: increment\n  }, \" Incr\\xE9ment \", count);\n}\n\n(0, _reactDom.render)( /*#__PURE__*/_react.default.createElement(\"div\", null, /*#__PURE__*/_react.default.createElement(Compteur, null)), document.getElementById('app'));"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"src/index.jsx","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"src/index.jsx","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"src/index.jsx","original":{"line":3,"column":0}},{"generated":{"line":25,"column":0},"source":"src/index.jsx","original":{"line":5,"column":0}},{"generated":{"line":26,"column":0},"source":"src/index.jsx","original":{"line":6,"column":0}},{"generated":{"line":27,"column":0},"source":"src/index.jsx","original":{"line":7,"column":0}},{"name":"useIncrement","generated":{"line":27,"column":9},"source":"src/index.jsx","original":{"line":7,"column":9}},{"generated":{"line":27,"column":21},"source":"src/index.jsx","original":{"line":7,"column":0}},{"name":"initial","generated":{"line":27,"column":22},"source":"src/index.jsx","original":{"line":7,"column":23}},{"generated":{"line":27,"column":29},"source":"src/index.jsx","original":{"line":7,"column":0}},{"name":"step","generated":{"line":27,"column":31},"source":"src/index.jsx","original":{"line":7,"column":32}},{"generated":{"line":27,"column":35},"source":"src/index.jsx","original":{"line":7,"column":0}},{"generated":{"line":27,"column":37},"source":"src/index.jsx","original":{"line":7,"column":38}},{"generated":{"line":28,"column":0},"source":"src/index.jsx","original":{"line":8,"column":4}},{"generated":{"line":28,"column":18},"source":"src/index.jsx","original":{"line":8,"column":30}},{"name":"initial","generated":{"line":28,"column":39},"source":"src/index.jsx","original":{"line":8,"column":39}},{"generated":{"line":28,"column":46},"source":"src/index.jsx","original":{"line":8,"column":30}},{"generated":{"line":28,"column":47},"source":"src/index.jsx","original":{"line":8,"column":4}},{"generated":{"line":29,"column":0},"source":"src/index.jsx","original":{"line":8,"column":4}},{"generated":{"line":30,"column":0},"source":"src/index.jsx","original":{"line":8,"column":4}},{"name":"count","generated":{"line":30,"column":6},"source":"src/index.jsx","original":{"line":8,"column":11}},{"generated":{"line":30,"column":11},"source":"src/index.jsx","original":{"line":8,"column":4}},{"generated":{"line":31,"column":0},"source":"src/index.jsx","original":{"line":8,"column":4}},{"name":"setCount","generated":{"line":31,"column":6},"source":"src/index.jsx","original":{"line":8,"column":18}},{"generated":{"line":31,"column":14},"source":"src/index.jsx","original":{"line":8,"column":4}},{"generated":{"line":33,"column":0},"source":"src/index.jsx","original":{"line":9,"column":4}},{"name":"increment","generated":{"line":33,"column":6},"source":"src/index.jsx","original":{"line":9,"column":10}},{"generated":{"line":33,"column":15},"source":"src/index.jsx","original":{"line":9,"column":19}},{"generated":{"line":33,"column":18},"source":"src/index.jsx","original":{"line":9,"column":22}},{"name":"increment","generated":{"line":33,"column":27},"source":"src/index.jsx","original":{"line":9,"column":10}},{"generated":{"line":33,"column":36},"source":"src/index.jsx","original":{"line":9,"column":22}},{"generated":{"line":33,"column":39},"source":"src/index.jsx","original":{"line":9,"column":28}},{"name":"setCount","generated":{"line":34,"column":0},"source":"src/index.jsx","original":{"line":10,"column":8}},{"name":"setCount","generated":{"line":34,"column":4},"source":"src/index.jsx","original":{"line":10,"column":8}},{"generated":{"line":34,"column":12},"source":"src/index.jsx","original":{"line":10,"column":16}},{"generated":{"line":34,"column":13},"source":"src/index.jsx","original":{"line":10,"column":17}},{"name":"c","generated":{"line":34,"column":23},"source":"src/index.jsx","original":{"line":10,"column":17}},{"generated":{"line":34,"column":24},"source":"src/index.jsx","original":{"line":10,"column":18}},{"generated":{"line":35,"column":0},"source":"src/index.jsx","original":{"line":10,"column":18}},{"name":"c","generated":{"line":35,"column":13},"source":"src/index.jsx","original":{"line":10,"column":22}},{"generated":{"line":35,"column":14},"source":"src/index.jsx","original":{"line":10,"column":23}},{"name":"step","generated":{"line":35,"column":17},"source":"src/index.jsx","original":{"line":10,"column":26}},{"generated":{"line":35,"column":21},"source":"src/index.jsx","original":{"line":10,"column":18}},{"generated":{"line":36,"column":0},"source":"src/index.jsx","original":{"line":10,"column":18}},{"generated":{"line":36,"column":5},"source":"src/index.jsx","original":{"line":10,"column":16}},{"generated":{"line":36,"column":6},"source":"src/index.jsx","original":{"line":10,"column":8}},{"generated":{"line":37,"column":0},"source":"src/index.jsx","original":{"line":11,"column":5}},{"generated":{"line":37,"column":3},"source":"src/index.jsx","original":{"line":9,"column":4}},{"generated":{"line":39,"column":0},"source":"src/index.jsx","original":{"line":12,"column":4}},{"generated":{"line":39,"column":9},"source":"src/index.jsx","original":{"line":12,"column":11}},{"name":"count","generated":{"line":39,"column":10},"source":"src/index.jsx","original":{"line":12,"column":12}},{"generated":{"line":39,"column":15},"source":"src/index.jsx","original":{"line":12,"column":11}},{"name":"increment","generated":{"line":39,"column":17},"source":"src/index.jsx","original":{"line":12,"column":19}},{"generated":{"line":39,"column":26},"source":"src/index.jsx","original":{"line":12,"column":11}},{"generated":{"line":39,"column":27},"source":"src/index.jsx","original":{"line":12,"column":4}},{"generated":{"line":40,"column":0},"source":"src/index.jsx","original":{"line":13,"column":1}},{"generated":{"line":42,"column":0},"source":"src/index.jsx","original":{"line":15,"column":0}},{"name":"Compteur","generated":{"line":42,"column":9},"source":"src/index.jsx","original":{"line":15,"column":9}},{"generated":{"line":42,"column":17},"source":"src/index.jsx","original":{"line":15,"column":0}},{"generated":{"line":42,"column":20},"source":"src/index.jsx","original":{"line":15,"column":21}},{"generated":{"line":43,"column":0},"source":"src/index.jsx","original":{"line":16,"column":4}},{"generated":{"line":44,"column":0},"source":"src/index.jsx","original":{"line":17,"column":4}},{"generated":{"line":45,"column":0},"source":"src/index.jsx","original":{"line":18,"column":4}},{"generated":{"line":46,"column":0},"source":"src/index.jsx","original":{"line":19,"column":4}},{"name":"useIncrement","generated":{"line":46,"column":22},"source":"src/index.jsx","original":{"line":19,"column":31}},{"generated":{"line":46,"column":34},"source":"src/index.jsx","original":{"line":19,"column":43}},{"generated":{"line":46,"column":35},"source":"src/index.jsx","original":{"line":19,"column":44}},{"generated":{"line":46,"column":36},"source":"src/index.jsx","original":{"line":19,"column":43}},{"generated":{"line":46,"column":38},"source":"src/index.jsx","original":{"line":19,"column":46}},{"generated":{"line":46,"column":39},"source":"src/index.jsx","original":{"line":19,"column":43}},{"generated":{"line":46,"column":40},"source":"src/index.jsx","original":{"line":19,"column":4}},{"generated":{"line":47,"column":0},"source":"src/index.jsx","original":{"line":19,"column":4}},{"generated":{"line":48,"column":0},"source":"src/index.jsx","original":{"line":19,"column":4}},{"name":"count","generated":{"line":48,"column":6},"source":"src/index.jsx","original":{"line":19,"column":11}},{"generated":{"line":48,"column":11},"source":"src/index.jsx","original":{"line":19,"column":4}},{"generated":{"line":49,"column":0},"source":"src/index.jsx","original":{"line":19,"column":4}},{"name":"increment","generated":{"line":49,"column":6},"source":"src/index.jsx","original":{"line":19,"column":18}},{"generated":{"line":49,"column":15},"source":"src/index.jsx","original":{"line":19,"column":4}},{"generated":{"line":51,"column":0},"source":"src/index.jsx","original":{"line":21,"column":4}},{"generated":{"line":51,"column":22},"source":"src/index.jsx","original":{"line":21,"column":11}},{"generated":{"line":52,"column":0},"source":"src/index.jsx","original":{"line":21,"column":19}},{"generated":{"line":52,"column":4},"source":"src/index.jsx","original":{"line":21,"column":19}},{"generated":{"line":52,"column":11},"source":"src/index.jsx","original":{"line":21,"column":26}},{"name":"increment","generated":{"line":52,"column":13},"source":"src/index.jsx","original":{"line":21,"column":28}},{"generated":{"line":53,"column":0},"source":"src/index.jsx","original":{"line":21,"column":11}},{"name":"count","generated":{"line":53,"column":23},"source":"src/index.jsx","original":{"line":21,"column":51}},{"generated":{"line":53,"column":28},"source":"src/index.jsx","original":{"line":21,"column":11}},{"generated":{"line":53,"column":29},"source":"src/index.jsx","original":{"line":21,"column":4}},{"generated":{"line":54,"column":0},"source":"src/index.jsx","original":{"line":22,"column":1}},{"generated":{"line":56,"column":0},"source":"src/index.jsx","original":{"line":24,"column":0}},{"generated":{"line":56,"column":36},"source":"src/index.jsx","original":{"line":25,"column":4}},{"generated":{"line":56,"column":91},"source":"src/index.jsx","original":{"line":26,"column":8}},{"generated":{"line":56,"column":120},"source":"src/index.jsx","original":{"line":26,"column":9}},{"generated":{"line":56,"column":128},"source":"src/index.jsx","original":{"line":26,"column":8}},{"generated":{"line":56,"column":135},"source":"src/index.jsx","original":{"line":25,"column":4}},{"generated":{"line":56,"column":136},"source":"src/index.jsx","original":{"line":24,"column":0}},{"name":"document","generated":{"line":56,"column":138},"source":"src/index.jsx","original":{"line":28,"column":4}},{"generated":{"line":56,"column":146},"source":"src/index.jsx","original":{"line":28,"column":12}},{"name":"getElementById","generated":{"line":56,"column":147},"source":"src/index.jsx","original":{"line":28,"column":13}},{"generated":{"line":56,"column":161},"source":"src/index.jsx","original":{"line":28,"column":4}},{"generated":{"line":56,"column":162},"source":"src/index.jsx","original":{"line":28,"column":28}},{"generated":{"line":56,"column":167},"source":"src/index.jsx","original":{"line":28,"column":4}},{"generated":{"line":56,"column":168},"source":"src/index.jsx","original":{"line":24,"column":0}}],"sources":{"src/index.jsx":"import {render} from 'react-dom'\nimport React, {useState} from 'react'\nimport './index.css'\n\n// Je crée une fonction qui renvoi simplement\n// le state d'une constante et une fonction d'incrmentation\nfunction useIncrement (initial, step) {\n    const [count, setCount] = useState(initial)\n    const increment = () => {\n        setCount(c => c + step)\n    }\n    return [count, increment]\n}\n\nfunction Compteur () {\n    // Et ici je dis que count et increment\n    // sont de type useIncrement\n    // Comprendre cette maniere d'écrire le code \n    const [count, increment] = useIncrement(0,2)\n\n    return <button onClick={increment}> Incrément {count}</button>\n}\n\nrender (\n    <div>\n        <Compteur />\n    </div>,\n    document.getElementById('app')\n)"},"lineCount":null}},"error":null,"hash":"82a32ca5a85889dbfde81bd3a72a0b62","cacheData":{"env":{}}}